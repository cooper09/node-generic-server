var _ = require('underscore');
var models = require('../../models').rtb;
var smaato = require('./index');
var logging = require('../../logging');

module.exports = function(req, res){
  // console.log(req.method);
  console.log("==============================\nBID REQUEST: Somaat");
  // console.log(req.body);
  // console.log(req.query);

  if(req.method == "POST") {
    handlePOST(req,res);
  }else if(req.method == "GET"){
    handleGET(req,res);
  }
}

function handleGET (req, res) {
  var testbid = req.query.testbid;
  console.log("handle GET", testbid);
  if (_.isUndefined(testbid)){
    console.log("no testbid provided");
    res.sendStatus(204);
  }else{
    // Testing
    handleTest(testbid, res);
  }
}

function handlePOST (req, res) {
  var testbid = req.query.testbid;
  console.log("handle POST", testbid);
  if (_.isUndefined(testbid)){
    console.log("no testbid provided");
    handleBidRequest( req, res );
  }else{
    // Testing
    handleTest(req, res);
  }
}

function handleTest (req, res) {
  var testbid = req.query.testbid;
  console.log("handling testbid", testbid);
  if(testbid == "nobid"){
    console.log("nobid!");
    logging.nobid_requested();
    res.sendStatus(204);
  }else if(testbid == "bid"){
    console.log("bid!");
    handleBidRequest (req, res);
  }
}


function handleBidRequest (req, res) {
  var bidrequest = new models.BidRequest(req.body);
  console.log("> BID ID:", bidrequest.id);
  console.log("> AT:", bidrequest.at);

  // Device
  if(bidrequest.device){
    var device = bidrequest.device;
    console.log("Device:");



    console.log(" - make:", device.make);
    console.log(" - model:", device.model);
    console.log(" - os:", device.os);
    console.log(" - osv:", device.osv);
    console.log(" - ua:", device.ua);
    console.log(" - devicetype:", models.DeviceType.get(device.devicetype).key);
    console.log(" - geo:", device.geo.country, device.geo.lat, device.geo.lon);
  }else{
    console.log("No Device");
  }

  // User
  if(bidrequest.user){
    var user = bidrequest.user;
    console.log("User:");
    console.log(" - gender:", user.gender);
    console.log(" - yob:", user.yob);
    console.log(" - customdata:", JSON.stringify(user.customdata));
    console.log(" - geo:", JSON.stringify(user.geo));
    console.log(" - data:", JSON.stringify(user.data));
    console.log(" - buyeruid:", user.buyeruid) ;
  }else{
    console.log("No User");
  }


  // Site or App
  if( bidrequest.site ){
    // Site
    var site = bidrequest.site;
    console.log("Site:", site.name);
    console.log(" - id:", site.id);
    console.log(" - categrories:", JSON.stringify(site.cat));
    console.log(" - domain:", site.domain);
    console.log(" - publisher:", JSON.stringify(site.publisher));
  }else if( bidrequest.app ){
    // App
    var app = bidrequest.app;
    console.log("App:", app.name);
    console.log(" - id:", app.id);
    console.log(" - categrories:", app.cat);
    console.log(" - domain:", app.domain);
  }else{
    // unknown
    console.log("Unknown Requester");
  }

   // Ext
  if(bidrequest.ext){
    var ext = bidrequest.ext;
    console.log("EXT:", ext);
  }else{
    console.log("No EXT");
  }

  // Imp
  for (var i in bidrequest.imp){
    var imp = bidrequest.imp[i];
    console.log(" >> id:", imp.id);
    console.log(" >> displaymanager:", imp.displaymanager);
    console.log(" >> instl:", imp.instl);
    console.log(" >> bidfloor: ", imp.bidfloor );
    if(imp.banner) {
      console.log("banner impression");
      var b = imp.banner;
      console.log(" >>> w:", b.w);
      console.log(" >>> h:", b.h);
      console.log(" >>> mimes:", JSON.stringify(b.mimes));
      var btypes = b.btype.map(function (x) {
        return models.BannerAdType.get(x).key;
      });
      console.log(" >>> btype:", btypes);

      /// respond for banner request here:
      var ad_type = adType(b.mimes);
      var adm = admarkup(b.w, b.h, ad_type);
      var ext = response_ext( ad_type);

      var bid_data = {
        id:"foobar",
        impid:"testimpid",
        price:0.52,
        adid:"testadid",
        nurl:"http://rtb-grifter.rhcloud.com/win",
        adomain:["apple.com"],
        bundle:"com.apple.itunes.freemusic1",
        iurl: "https://s3-us-west-2.amazonaws.com/polyimages/mobfox-320x50_1.jpg",
        cid:"testcampaignid",
        crid:"testcreativeid",
        cat:["IAB1-6"],
        attr:[0],
        dealid:"testdealid",
        h: b.h,
        w: b.w,
        adm: adm
      };

      var seatbid_data = {
        bid: [ new models.Bid( bid_data ) ],
        seat:"mytestseat",
        group: 0
      };

      var response_data = {
        id:"abc123",
        bidid:"mytestbidid",
        cur:"USD",
        nbr:0,
        seatbid:[new models.SeatBid(seatbid_data)],
        ext:ext
      };

      logging.bid_requested( bidrequest.id, bid_data.price, ad_type);

      var bid_response = new models.BidResponse( response_data );
      res.setHeader('Content-Type', 'application/json');
      res.send(JSON.stringify(bid_response));
      ///
    } else if(imp.video) {
      console.log("video impression");
    } else if(audio) {
      console.log("audio impression");
    } else if(imp.native) {
      console.log("native impression");
    }
  }


}

function randomBidValue (min, max) {
  // body...
}

function adType(mimes) {
  var rm = false;
  var tx = false;
  var im = false;
  _.all(mimes, function (m) {
    if (_.contains(richmedia_mimes, m)){
      rm = true
    }
  });
  _.all(mimes, function (m) {
    if (_.contains(text_mimes, m)){
      tx = true
    }
  });
  _.all(mimes, function (m) {
    if (_.contains(image_mimes, m)){
      im = true
    }
  });

  if (rm) {
    return "richmediaAd";
  } else if (tx) {
    return "textAd";
  } else if (im) {
    return "imageAd";
  }
}

var response_ext = function ( ad_type ) {
  var ext = {};
  console.log("Generating EXT for bid from SMAATO", ad_type);
  return ext;
}

var admarkup = function (w, h, type) {
  console.log("Generating Ad Markup for bid from SMAATO");
  var beacons = [];
  if(type == "richmediaAd"){
    var content = "<script>Richmedia Example</script>";
    var ad = smaato.createRichMediaAd(content, w, h, beacons);
    console.log("ad>", ad);
    return ad;
  }else if(type == "imageAd"){
    var imgUrl = "http://mysite.com/images/myad.jpg";
    var clickUrl = "http://mysite.com/landingpages/mypage/";
    var toolTip = "This is a tooltip text"
    var additionalText = "Additional text to be displayed";
    var ad = smaato.createImageAd(clickUrl, imgUrl, w, h, toolTip, additionalText, beacons);
    console.log("ad>", ad);
    return ad;
  }else if(type == "textAd"){
    var clickText = "Advertisement text to be clicked";
    var clickUrl = "http://mysite.com/landingpages/mypage/";
    var toolTip = "This is a tooltip text"
    var additionalText = "Additional text to be displayed";
    var ad = smaato.createTextAd(clickText, clickUrl, toolTip, additionalText, beacons);
    console.log("ad>", ad);
    return ad;
  }
}

var richmedia_mimes = [ "application/javascript", "text/javascript"];
var text_mimes = [ "text/html","text/plain" ];
var image_mimes = [ "image/gif", "image/jpeg", "image/png" ];
